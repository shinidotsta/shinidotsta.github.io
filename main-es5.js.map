{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/board/board.component.ts","webpack:///src/app/board/board.component.html","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/instruction-component/instruction-component.component.ts","webpack:///src/app/instruction-component/instruction-component.component.html","webpack:///src/app/square/square.component.ts","webpack:///src/app/square/square.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","declarations","imports","AppComponent","title","console","log","document","getElementById","style","width","closeNav","openNav","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","BoardComponent","squares","turn","gameover","winner","myVar","i","changeTurn","checkWinner","window","location","reload","lines","line","cell","forEach","startGame","GameComponent","InstructionComponentComponent","SquareComponent","click","emit","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport {Routes,RouterModule} from '@angular/router';\r\nimport { InstructionComponentComponent } from './instruction-component/instruction-component.component';\r\nimport { GameComponent } from './game/game.component';\r\n\r\n\r\n\r\nconst routes:Routes=[\r\n  {path:'',component:GameComponent},\r\n{path:'instructions',component:InstructionComponentComponent},\r\n{path:'game',component:GameComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports:[RouterModule]\r\n\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TicTacToe';\n\n   openNav() {\n     console.log(\"hai\");\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n  }\n  \n   closeNav() {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  }\n}\n","\r\n    <div id=\"mySidenav\" class=\"sidenav\">\r\n        <a href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"closeNav()\">&times;</a>\r\n    \r\n        <a class=\"button\" routerLink=\"/game\">New Game</a>\r\n        <a class=\"button\" routerLink=\"/instructions\">Instructions</a>\r\n      </div>\r\n      \r\n      \r\n      <span class=\"menu\" (click)=\"openNav()\">&#9776; Menu</span> \r\n\r\n\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SquareComponent } from './square/square.component';\nimport { BoardComponent } from './board/board.component';\nimport { GameComponent } from './game/game.component';\nimport { InstructionComponentComponent } from './instruction-component/instruction-component.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SquareComponent,\n    BoardComponent,\n    GameComponent,\n    InstructionComponentComponent,\n   \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  squares:string[]=[];\n  turn : string='X';\n  gameover:boolean=false;\n  winner=null;\n  myVar:boolean=false;\n\n  ngOnInit(): void {\n    for(let i=0;i<9;i++)\n    {\n      this.squares[i]=null;\n    }\n  }\n\n clickHandler(id:number)\n {\n   console.log(id);\n   if(!this.gameover){\n     if(this.squares[id]=== null){\n       this.squares[id]=this.turn;\n       this.changeTurn();\n      this.checkWinner();\n     }\n   }\n }\n startGame(){\n  window.location.reload(true);\n   this.turn='X';\n   this.gameover=false;\n }\n  \nchangeTurn(){\n  if(this.turn==='X'){\n    this.turn='O';\n  } else{\n    this.turn='X';\n  }\n}\ncheckWinner(){\n  let lines =[\n    [0,1,2],[3,4,5],[6,7,8],\n    [0,3,6],[1,4,7],[2,5,8],\n    [0,4,8],[2,4,6]\n  ];\n  for(let line of lines)\n  {\n    if(this.squares[line[0]]===this.squares[line[1]] && this.squares[line[1]]===this.squares[line[2]] &&\n    this.squares[line[0]] !== null){\n      this.gameover=true;\n      this.winner=this.squares[line[0]];\n      this.myVar=true;\n      return;\n    }\n  }\n  let cell =0;\n  this.squares.forEach((e) => {cell += (e !== null ? 1 :0)});\n  if(cell ===9){\n    this.gameover=true;\n    this.winner='tie';\n  }\n}\n}\n","\n<div class=\"game-board\">\n    <div class=\"player\">\n        <span [style.visibility]=\"myVar ? 'visible' : 'hidden'\" class=\"blinking\">{{winner}} Congratulations !!</span>\n     </div>\n    <div class=\"board\">\n        <div>\n            <square *ngFor=\"let square of squares | slice:0 : 3;let i=index\"\n            [value]=\"square\" (playerClick)=\"clickHandler(i)\">\n            </square>\n        </div>\n        <div>\n            <square *ngFor=\"let square of squares | slice:3 : 6;let i=index\"\n            [value]=\"square\" (playerClick)=\"clickHandler(i+3)\">\n            </square>\n        </div>\n        <div>\n            <square *ngFor=\"let square of squares | slice:6;let i=index\"\n            [value]=\"square\" (playerClick)=\"clickHandler(i+6)\">\n            </square>\n        </div>\n    </div>\n    <br>\n    <!--<div class=\"gameMsg\">\n        <div *ngIf=\"winner ==='tie'\"> It's a Tie </div>\n    </div>-->\n    \n    <div class=\"game-btn\" (click)=\"startGame()\">Start Game</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<body>\n  \n    <div class=\"main\"> \n        <div>\n            <img class=\"headimg\" src=\"../../assets/tic.gif\" alt=\"Loading..\">\n         </div>\n        <div class=\"board\">\n            <board></board>\n         </div>\n    </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instruction-component',\n  templateUrl: './instruction-component.component.html',\n  styleUrls: ['./instruction-component.component.css']\n})\nexport class InstructionComponentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n    <div class=\"container\">\n\n        <p >\n            1. The game is played on a grid that's 3 squares by 3 squares.<br><br>\n\n            2. Player 1 is \"X\" and Player 2 is \"O\".<br><br>\n\n            3. Players take turns putting their marks in empty squares.<br><br>\n\n            4. Any player to get 3 of same (up, down, across, or diagonally) is the winner.<br><br>\n\n            5. When all 9 squares are full, the game is over.\n          </p>\n          <button id=\"start\" routerLink=\"/game\">Start Now...!!!!</button>\n     </div>\n     \n  \n</body>\n\n                 ","import { Component, Input, Output,EventEmitter, HostListener } from '@angular/core';\n\n\n@Component({\n  selector: 'square',\n  templateUrl: './square.component.html',\n  styleUrls: ['./square.component.css']\n})\nexport class SquareComponent {\n\n  constructor() { }\n\n  @Input() value: string;\n  @Output('playerClick') click =new EventEmitter<string>();\n  @HostListener('click')\n  clickHandler(){\n    this.click.emit('');\n  }\n  \n\n\n}\n","<div class=\"cell\"> {{value}}</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}